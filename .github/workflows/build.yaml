name: CI_CD

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: >-
    ${{ github.workflow }}-
    ${{ github.ref_type }}-
    ${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: ["ubuntu-latest"]
        python-version: [ "3.6", "3.7", "3.8", "3.9", "3.10" ]
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Dynamic versioning
        run: |
          python -m pip install --upgrade pip
          pip install versiontag
          python -c 'import versiontag; print("__version__ = \"%s\"" % (versiontag.get_version(pypi=True)))' > sshconf_version.py

      - name: Install dependencies
        run: |
          pip install -e '.[test]'

      - name: Run tests
        run: pytest tests

      - name: Codecov upload
        run: codecov

      - name: Test flit build
        run: flit build

  deploy:
    runs-on: "ubuntu-latest"
    needs: test
    strategy:
      matrix:
        platform: ["ubuntu-latest"]
        python-version: [ "3.6" ]
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Dynamic versioning
        run: |
          python -m pip install --upgrade pip
          pip install versiontag
          python -c 'import versiontag; print("__version__ = \"%s\"" % (versiontag.get_version(pypi=True)))' > sshconf_version.py

      - name: Publish
        run: |
          flit publish
